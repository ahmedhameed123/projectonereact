{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\newproject\\\\my-app\\\\src\\\\Context\\\\guestContext\\\\GuestState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useEffect } from 'react';\nimport GuestContext from './guestContext';\nimport guestReducer from './guestReducer';\nimport { SUS_THEM } from '../types';\n\nconst GuestState = props => {\n  _s();\n\n  const intialState = {\n    backMode: localStorage.getItem(\"backMode\") || 'theme-light' // backMode:  'dark',  \n\n  };\n  const [state, dispatch] = useReducer(guestReducer, intialState);\n  useEffect(() => {\n    localStorage.setItem('backMode', state.backMode);\n  }, [state.backMode]);\n\n  const darkMode = async () => {\n    try {\n      dispatch({\n        type: SUS_THEM\n      });\n    } catch (err) {\n      console.log(\"err\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(GuestContext.Provider, {\n    value: {\n      backMode: state.backMode,\n      darkMode\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GuestState, \"XStJqF7F09aht/JkpKz/HpJvZiw=\");\n\n_c = GuestState;\nexport default GuestState;\n\nvar _c;\n\n$RefreshReg$(_c, \"GuestState\");","map":{"version":3,"sources":["D:/newproject/my-app/src/Context/guestContext/GuestState.js"],"names":["React","useReducer","useEffect","GuestContext","guestReducer","SUS_THEM","GuestState","props","intialState","backMode","localStorage","getItem","state","dispatch","setItem","darkMode","type","err","console","log","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACC,OAAOC,YAAP,MAAyB,gBAAzB;AACD,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAEEC,QAFF,QAIO,UAJP;;AAMA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAMC,WAAW,GAAG;AAElBC,IAAAA,QAAQ,EAACC,YAAY,CAACC,OAAb,CAAqB,UAArB,KAAoC,aAF3B,CAGlB;;AAHkB,GAApB;AAOA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,UAAU,CAACG,YAAD,EAAeI,WAAf,CAApC;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,YAAY,CAACI,OAAb,CAAqB,UAArB,EAAkCF,KAAK,CAACH,QAAxC;AACA,GAFO,EAEL,CAAEG,KAAK,CAACH,QAAR,CAFK,CAAT;;AAGF,QAAMM,QAAQ,GAAG,YAAY;AAC3B,QAAI;AACFF,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAEX;AADC,OAAD,CAAR;AAID,KALD,CAKE,OAAOY,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACD;AACF,GATD;;AAkBE,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAE5BV,MAAAA,QAAQ,EAAEG,KAAK,CAACH,QAFY;AAI5BM,MAAAA;AAJ4B,KAA9B;AAAA,cAMGR,KAAK,CAACa;AANT;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAzCD;;GAAMd,U;;KAAAA,U;AA2CN,eAAeA,UAAf","sourcesContent":["import React, { useReducer,useEffect } from 'react'\n import GuestContext from './guestContext';\nimport guestReducer from './guestReducer';\nimport {\n \n  SUS_THEM,\n  \n} from '../types'\n\nconst GuestState = (props) => {\n  const intialState = {\n \n    backMode:localStorage.getItem(\"backMode\") || 'theme-light',  \n    // backMode:  'dark',  \n\n  \n  }\n  const [state, dispatch] = useReducer(guestReducer, intialState)\n\n  useEffect(() => {\n    localStorage.setItem('backMode',  state.backMode)\n   }, [ state.backMode]);\nconst darkMode = async () => {\n  try {\n    dispatch({\n      type: SUS_THEM,\n      \n    })\n  } catch (err) {\n    console.log(\"err\");\n  }\n}\n\n\n\n\n\n\n\n\n  return (\n    <GuestContext.Provider value={{\n \n      backMode: state.backMode,\n\n      darkMode\n    }} >\n      {props.children}\n    </GuestContext.Provider >\n  )\n}\n\nexport default GuestState\n"]},"metadata":{},"sourceType":"module"}